public class Common
{
   public static final int ITERATIONS = 100000;
   public static final int ANTHILLANTS = 10000;
   public static final int MATRIXSIZE = 100;
   public static final int FRAMESIZE = 1000;
   public static final int SQSIZE = FRAMESIZE / MATRIXSIZE;
   public static final int ANTHILLDIST = 40;
   public static final int MAXFOOD = 1500;
   public static final double FOODBIAS = .1;
   public static final double HOMEBIAS = 3;
   public static final double COMBATCONST = 0.001;
   public static final double FOODCHANCE = 1 / 400.;

   // Carmack's inverse square root
   public static double Q_rsqrt(double number)
   {
      double x = number;
      double xhalf = 0.5d * x;
      long i = Double.doubleToLongBits(x);
      i = 0x5fe6ec85e7de30daL - (i >> 1);
      x = Double.longBitsToDouble(i);
      for (int it = 0; it < 4; it++) // Change limit to increase accuracy
         x = x * (1.5d - xhalf * x * x);
      x *= number;
      return x;
   }
}