import java.awt.Color;
import java.awt.Graphics;
import java.util.ArrayList;
import java.util.Random;

import javax.swing.JPanel;

public class AntPanel extends JPanel
{
   // private Image screenBuffer;
   Random rand = new Random();
   Square[][] squares;
   private ArrayList<Food> food;
   private ArrayList<Anthill> anthills;

   public AntPanel(final int width, final int height)
   {
   }

   public void update(Square[][] squares, ArrayList<Food> food,
         ArrayList<Anthill> anthills)
   {
      this.squares = squares;
      this.food = food;
      this.anthills = anthills;
   }

   public void paintComponent(Graphics g)
   {
      super.paintComponent(g);

      // Draw all ants
      for (int i = 0; i < squares.length; i++)
         for (int j = 0; j < squares.length; j++)
         {
            int[][] ants = squares[i][j].getAnts();

            // Draw first ant type
            g.setColor(Color.BLUE);
//            for (int k = 0; k < ants[0][0] + ants[0][1]; k++)
//               g.fillOval(Settings.SQSIZE * i + rand.nextInt(Settings.SQSIZE),
//                     Settings.SQSIZE * j + rand.nextInt(Settings.SQSIZE), 2, 2);
            for (int k = 0; k < ants[0][0]; k++)
               g.fillOval(Settings.SQSIZE * i + rand.nextInt(Settings.SQSIZE),
                     Settings.SQSIZE * j + rand.nextInt(Settings.SQSIZE), 3, 3);
            f.setColor(Color.YELLOW);
            for (int k = 0; k <  + ants[0][1]; k++)
               g.fillOval(Settings.SQSIZE * i + rand.nextInt(Settings.SQSIZE),
                     Settings.SQSIZE * j + rand.nextInt(Settings.SQSIZE), 3, 3);

            // Draw second ant type
            g.setColor(Color.RED);
            for (int k = 0; k < ants[1][0] + ants[1][1]; k++)
               g.fillOval(Settings.SQSIZE * i + rand.nextInt(Settings.SQSIZE),
                     Settings.SQSIZE * j + rand.nextInt(Settings.SQSIZE), 2, 2);
         }

      // Draw all food
      g.setColor(Color.GREEN);
      for (Food f : food)
      {
         g.fillOval((int) (f.getX() * Settings.SQSIZE + Settings.SQSIZE / 2.),
               (int) (f.getY() * Settings.SQSIZE + Settings.SQSIZE / 2.),
               (int) Math.sqrt(f.getAmt()), (int) Math.sqrt(f.getAmt()));
      }

      // Draw all anthills
      for (Anthill hill : anthills)
      {
         if (hill.getType() == 0)
            g.setColor(Color.BLACK);
         else
            g.setColor(Color.MAGENTA);

         g.fillRect(
               (int) (hill.getX() * Settings.SQSIZE + Settings.SQSIZE / 2.),
               (int) (hill.getY() * Settings.SQSIZE + Settings.SQSIZE / 2.), 10,
               10);
      }
   }
}
